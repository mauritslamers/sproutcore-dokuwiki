a:2:{s:7:"current";a:8:{s:4:"date";a:2:{s:7:"created";i:1287396398;s:8:"modified";i:1287396545;}s:7:"creator";s:14:"Maurits Lamers";s:11:"last_change";a:7:{s:4:"date";i:1287396545;s:2:"ip";s:12:"83.163.43.99";s:4:"type";s:1:"E";s:2:"id";s:29:"concepts:datastore:datasource";s:4:"user";s:7:"maurits";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:7:"maurits";s:14:"Maurits Lamers";}s:5:"title";s:10:"DataSource";s:11:"description";a:2:{s:15:"tableofcontents";a:2:{i:0;a:4:{s:3:"hid";s:10:"datasource";s:5:"title";s:10:"DataSource";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:20:"data_source_workings";s:5:"title";s:20:"Data source workings";s:4:"type";s:2:"ul";s:5:"level";i:3;}}s:8:"abstract";s:503:"An application is useless of course if the store doesn't contain data, so there has to be a mechanism that fills the store. There isn't a unified way of talking to servers however as there are many types of back-ends and interfaces. To make the transition from the back end to the store possible, there needs to be a translation engine, which in SC is called a data source. The data source will translate calls made by the applicationto the store into requests to the server, it will manage the data â€¦";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:4:{s:4:"date";a:2:{s:7:"created";i:1287396398;s:8:"modified";i:1287396545;}s:7:"creator";s:14:"Maurits Lamers";s:11:"last_change";a:7:{s:4:"date";i:1287396545;s:2:"ip";s:12:"83.163.43.99";s:4:"type";s:1:"E";s:2:"id";s:29:"concepts:datastore:datasource";s:4:"user";s:7:"maurits";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:7:"maurits";s:14:"Maurits Lamers";}}}