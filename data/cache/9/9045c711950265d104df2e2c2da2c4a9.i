a:44:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:7:"RunLoop";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:22;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:417:"
As JavaScript is a event based language, a continuous running JavaScript application wouldn't work well and would need much resources.  The RunLoop wraps the JavaScript (or browser) events and is used to propagate all changes throughout the entire application, and fire all observers and bindings. In a browser the RunLoop is mostly executed after every event supported by the browser, such as mouseover, onclick etc";}i:2;i:23;}i:5;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:440;}i:6;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:443;}i:7;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:445;}i:8;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:22:"Advantages of RunLoops";i:1;i:3;i:2;i:445;}i:2;i:445;}i:9;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:445;}i:10;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:478;}i:11;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:478;}i:12;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:478;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:" More consistent timing";}i:2;i:482;}i:14;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:505;}i:15;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:505;}i:16;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:505;}i:17;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:505;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:150:" Gives you a way to defer execution of some events until the end of the loop or until a later time. This can dramatically improve performance at times";}i:2;i:509;}i:19;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:659;}i:20;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:659;}i:21;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:659;}i:22;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:661;}i:23;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:30:"Using RunLoops in your own app";i:1;i:3;i:2;i:661;}i:2;i:661;}i:24;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:661;}i:25;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:701;}i:26;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:701;}i:27;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:701;}i:28;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:83:" Always begin and end each event handler with SC.RunLoop.begin() & SC.RunLoop.end()";}i:2;i:705;}i:29;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:788;}i:30;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:788;}i:31;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:788;}i:32;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:788;}i:33;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:" Use Function.invokeLater() instead of timeouts";}i:2;i:792;}i:34;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:839;}i:35;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:839;}i:36;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:839;}i:37;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:839;}i:38;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:53:" Use Function.invokeOnce() to exec updates only once.";}i:2;i:843;}i:39;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:896;}i:40;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:896;}i:41;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:896;}i:42;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:896;}i:43;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:896;}}